---
import type { ZodFormattedError } from 'astro/zod'
import ApplicationLayout from '~/layouts/ApplicationLayout.astro'
import { type InsertFacility, facilityTypes, insertFacilitySchema } from '~/schemas/facility'
import facilityService from '~/services/facility'

let errors: ZodFormattedError<InsertFacility> | undefined

if (Astro.request.method === 'POST') {
  const data = Object.fromEntries(
    await Astro.request.formData(),
  )
  const facility = await insertFacilitySchema.safeParseAsync(data)

  if (facility.success) {
    const response = await facilityService.add(facility.data)

    if (response.ok)
      return Astro.redirect('/facilities')

    errors = { _errors: [response.error.title] }
  }
  else { errors = facility.error.format() }
}

---

<ApplicationLayout>
  <form method="post">
    <div class="flex flex-col children:border-2">
      <label for="description">Description</label>
      <input type="text" name="description" id="description" value="test" required />
      { errors?.description && <p class="text-red-600">{ errors.description._errors.at(0) }</p> }
    </div>

    <div class="flex flex-col children:border-2">
      <label for="type">Type</label>
      <select name="type" id="type">
        {
          facilityTypes.map(type => (
            <option>{ type }</option>
          ))
        }
      </select>
      { errors?.type && <p class="text-red-600">{ errors.type._errors.at(0) }</p> }
    </div>

    <div class="flex flex-col children:border-2">
      <label for="typeDescription">Facility type description</label>
      <input
        type="text"
        list="facilityTypeDescriptions"
        name="facilityTypeDescription"
        id="typeDescription"
        value="test"
        required
      />
      { errors?.facilityTypeDescription && <p class="text-red-600">{ errors.facilityTypeDescription._errors.at(0) }</p> }

      <datalist id="facilityTypeDescriptions">
        {/* TODO: fetch from api */}
        <option value="test"></option>
        <option value="test2"></option>
      </datalist>
    </div>

    <button type="submit">Save</button>
  </form>

  { JSON.stringify(errors) }
</ApplicationLayout>
