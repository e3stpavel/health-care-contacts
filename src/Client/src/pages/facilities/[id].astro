---
import type { z } from 'astro/zod'
import ApplicationLayout from '~/layouts/ApplicationLayout.astro'
import { type SelectFacility, facilityTypes, selectFacilitySchema } from '~/schemas/facility'
import facilityService from '~/services/facility'

const id = Astro.params.id
let response = await facilityService.findOne(+id!)
let errors: z.ZodFormattedError<SelectFacility> | undefined

if (Astro.request.method === 'POST') {
  const data = Object.fromEntries(
    await Astro.request.formData(),
  )
  const updatedFacility = await selectFacilitySchema.safeParseAsync(data)

  if (updatedFacility.success)
    response = await facilityService.update(+id!, updatedFacility.data)
  else
    errors = updatedFacility.error.format()
}

if (!response.ok) {
  const { status, title } = response.error

  if (status === 404)
    return Astro.redirect('/404')

  throw new Error(title)
}

const facility = response.data

---

<ApplicationLayout>
  <form method="post">
    <div>
      <input type="hidden" name="id" value={facility.id} />
    </div>

    <div>
      <label for="description">Description</label>
      <input
        type="text"
        value={facility.description}
        name="description"
        id="description"
      />
    </div>

    <div>
      {/* TODO: we cannot edit type */}
      <label for="type">Type</label>
      <select name="type" id="type">
        {
          facilityTypes.map(type => (
            <option {...(facility.type === type ? { selected: true } : {})}>{ type }</option>
          ))
        }
      </select>
    </div>

    <div>
      <label for="typeDescription">Facility type description</label>
      <input
        type="text"
        list="facilityTypeDescriptions"
        name="facilityTypeDescription"
        id="typeDescription"
        value={facility.facilityTypeDescription}
        required
      />

      <datalist id="facilityTypeDescriptions">
        {/* TODO: fetch from api */}
        <option value="test"></option>
        <option value="test2"></option>
      </datalist>
    </div>

    <div>
      { JSON.stringify(facility.contacts) }
      { JSON.stringify(errors) }
    </div>

    <button type="submit">Save</button>
  </form>
</ApplicationLayout>
