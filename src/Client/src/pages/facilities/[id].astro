---
import ApplicationLayout from '~/layouts/ApplicationLayout.astro'
import { type Facility, selectFacilitySchema } from '~/schemas/facility'

const { id } = Astro.params

let response, facility, errors

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData()
  const data = Object.fromEntries(formData)

  const validation = selectFacilitySchema.safeParse(data)

  if (!validation.success) {
    facility = data as unknown as Facility
    errors = validation.error.format()
  }
  else {
    response = await fetch(`${import.meta.env.API}/facilities/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(validation.data),
    })
  }
}
else {
  response = await fetch(`${import.meta.env.API}/facilities/${id}`)
}

if (response) {
  if (!response.ok) {
    if (response.status === 404)
      return Astro.redirect('/404')

    throw new Error(`Request failed with status ${response.status}`)
  }

  // either redirect to list
  // if (Astro.request.method === 'POST')
  //   return Astro.redirect('/facilities')

  facility = await response.json() as Facility
}

---

<ApplicationLayout>
  {/* or write success message */}
  {Astro.request.method === 'POST' && response?.ok && <div>Updated</div>}
  <form method="post">
    <input type="hidden" name="id" value={facility?.id} />
    <div>
      <label for="description">description</label>
      <input type="text" name="description" id="description" value={facility?.description} />
      {errors?.description?._errors.at(0)}
    </div>

    <input type="hidden" name="type" value={facility?.type} />
    <input type="text" name="facilityTypeDescription" value={facility?.facilityTypeDescription} />

    <button type="submit">Save</button>
    <p>{ JSON.stringify(errors) }</p>
  </form>
</ApplicationLayout>
